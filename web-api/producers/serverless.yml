# NOTE: update this with your service name
service: web-api-producers

# Create an optimized package for our functions
package:
  individually: true

plugins:
  - serverless-bundle # Package our functions with Webpack
  - serverless-offline
  - serverless-dotenv-plugin # Load .env as environment variables

provider:
  name: aws
  runtime: nodejs12.x
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-2'}
  environment:
    OUR_ENV: ${self:provider.stage}
    INITIATIVE_TOPIC_ARN: !ImportValue initiative-program-resources-sns-arn
    API_AUTHORIZER_ID: !ImportValue web-api-resources-apigw-authorizer
  iamRoleStatements:
    - Effect: 'Allow'
      Action: 'sns:Publish'
      Resource: '*'
    - Effect: 'Allow'
      Action:
        - 'lambda:InvokeFunction'

functions:
  createInitiative:
    handler: src/initiatives/post.main
    onError: !Sub 'arn:aws:sns:${AWS::Region}:${AWS::AccountId}:lambdadeadletterqueue'
    events:
      - http:
          path: initiatives
          method: post
          cors: true
          authorizer:
            type: COGNITO_USER_POOLS
            authorizerId: fpf6li
  updateInitiative:
    handler: src/initiatives/put.main
    onError: !Sub 'arn:aws:sns:${AWS::Region}:${AWS::AccountId}:lambdadeadletterqueue'
    events:
      - http:
          path: initiatives
          method: put
          cors: true
          authorizer:
            type: COGNITO_USER_POOLS
            authorizerId: fpf6li
